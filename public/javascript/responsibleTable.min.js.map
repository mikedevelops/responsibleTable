{"version":3,"sources":["responsibleTable.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_typeof","Symbol","iterator","obj","constructor","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","ResponsibleTable","options","this","defaults","activeClass","columnHeadingClass","containerSelector","subHeadingClass","tableDataClass","tableSelector","debug","extendDefaults","originalTables","slice","call","document","querySelectorAll","tableProps","containers","columnHeadings","cache","original","responsible","init","value","map","table","index","cacheTable","rows","getRows","columns","getColumns","createDocumentFragment","headings","getTableHeadings","push","outerHTML","bind","classList","contains","firstRow","children","getElementsByTagName","console","log","innerHTML","fragment","firstCell","querySelector","createElement","thisCell","setAttribute","appendChild","thisFragment","cells","add","thisRow","thisHeading","prop","hasOwnProperty"],"mappings":"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","file":"responsibleTable.min.js","sourcesContent":["// TODO\n// public method for returning table(s)\n\nclass ResponsibleTable {\n    constructor (options) {\n        // defaults\n        this.defaults = {\n            activeClass: 'responsibleTable--active',\n            columnHeadingClass: 'responsibleTable__column-heading',\n            containerSelector: '.container',\n            subHeadingClass: 'responsibleTable__sub-heading',\n            tableDataClass: 'responsibleTable__table-data',\n            tableSelector: '.responsibleTable',\n            debug: false\n        }\n\n        this.extendDefaults(options, this.defaults);\n\n        // vars\n        this.originalTables = [].slice.call(document.querySelectorAll(this.defaults.tableSelector));\n        this.tableProps = {};\n        this.containers = [].slice.call(document.querySelectorAll(this.defaults.containerSelector));\n        this.columnHeadings = [];\n\n        // cache\n        this.cache = {\n            original: [],\n            responsible: []\n        };\n\n        // init\n        if (!this.defaults.debug) {\n            this.init();\n        }\n    }\n\n    // initiate & build\n    init () {\n        this.originalTables.map(function (table, index) {\n            // cache original state\n            this.cacheTable(table, 'oringial');\n\n            // not sure where this stuff should live, yet\n            var rows = this.getRows(table);\n            var columns = this.getColumns(table);\n            var fragment = document.createDocumentFragment();\n\n            // initialise tableProp object\n            this.tableProps[index] = {rows: 0, columns: 0}\n            this.tableProps[index].rows = rows.length;\n            this.tableProps[index].columns = columns.length;\n            this.tableProps[index].headings = this.getTableHeadings(table, index);\n\n            // fragment.appendChild(this.buildFirstRow(table));\n\n            // // loop through rows excluding the first and build out the data\n            // for (var i = 1; i < rows.length; i++) {\n            //     fragment.appendChild(this.buildTableData(table, i));\n            // }\n\n            // // remove original first row\n            // rows[0].parentNode.removeChild(rows[0]);\n\n            // // append fragment to container\n            // table.querySelector('tbody').appendChild(fragment);\n            // table.classList.add(this.defaults.activeClass);\n\n            // cache new table\n            this.cache.responsible.push(table.outerHTML);\n        }.bind(this));\n    }\n\n    /**\n    * Cache instance of table in current state as string\n    * @param {HTMLElement} table\n    **/\n    cacheTable (table) {\n        if (!table.classList.contains(this.defaults.activeClass)) {\n            this.cache.original.push(table.outerHTML);\n        }\n        else {\n            this.cache.responsible.push(table.outerHTML);\n        }\n    }\n\n    /**\n    * Get columns\n    * @param    {HTMLElement} table\n    * @return   {nodeList} columns\n    **/\n    getColumns (table) {\n        // potentially better way of getting this, maybe get largets row instead of assuming the first\n        var firstRow = this.getRows(table)[0];\n        return firstRow.children;\n    }\n\n    /**\n    * Get rows\n    * @param    {HTMLElement} table\n    * @return   {nodeList} rows\n    **/\n    getRows (table) {\n        return table.getElementsByTagName('tr');\n    }\n\n    /**\n    * Get column headings\n    * @param    {HTMLElement} table\n    * @return   {Array} column headings\n    **/\n    getTableHeadings (table, index) {\n        var headings = [];\n        console.log(this.tableProps[index].columns);\n        for (var i = 0; i < this.tableProps[index].columns; i++) {\n            console.log(table.getElementsByTagName('th')[i]);\n\n            headings.push(table.getElementsByTagName('th')[i].innerHTML);\n        }\n\n        return headings;\n    }\n\n    // first row will be first th\n    buildFirstRow (table, fragment) {\n        // this might not be a th, fix that\n        var firstCell = table.querySelector('th');\n        var firstRow = document.createElement('tr');\n        var thisCell = document.createElement('th');\n\n        thisCell.innerHTML = firstCell.innerHTML;\n        thisCell.setAttribute('colspan', 2);\n        firstRow.appendChild(thisCell);\n\n        return firstRow;\n    }\n\n    buildTableData (table, index) {\n        var thisFragment = document.createDocumentFragment();\n        var rows = table.querySelectorAll('tr');\n        var firstRow = document.createElement('tr');\n        // replace 1 for i when looping though rows\n        var cells = rows[index].querySelectorAll('td');\n        var firstCell = cells[0];\n\n        // append first cell as data heading\n        firstCell.setAttribute('colspan', 2);\n        firstCell.classList.add(this.defaults.subHeadingClass);\n        firstRow.appendChild(firstCell);\n        thisFragment.appendChild(firstRow);\n\n        // loop through each column exluding first and\n        // populate data\n        for (var i = 1; i < cells.length; i++) {\n            var thisRow = document.createElement('tr');\n            var thisHeading = document.createElement('td');\n\n            thisHeading.innerHTML = this.columnHeadings[i];\n\n            // TODO: this might not be a 'th', fix that\n            thisHeading.classList.add(this.defaults.columnHeadingClass);\n            thisRow.appendChild(thisHeading);\n            cells[i].classList.add(this.defaults.tableDataClass);\n            thisRow.appendChild(cells[i]);\n            thisFragment.appendChild(thisRow);\n        }\n\n        return thisFragment;\n    }\n\n    restore () {\n        this.originalTables.map(function (table, index) {\n            table.outerHTML = this.cache.original[index];\n        }.bind(this));\n    }\n\n    extendDefaults (options, defaults) {\n        if (typeof options === 'object') {\n            for (var prop in options) {\n                if (defaults.hasOwnProperty(prop)) {\n                    defaults[prop] = options[prop];\n                }\n            }\n        }\n    }\n}\n"],"sourceRoot":"/source/"}