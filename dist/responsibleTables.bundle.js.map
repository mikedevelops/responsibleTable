{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/responsibleTables.js"],"names":[],"mappings":"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","file":"responsibleTables.bundle.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","// TODO public method for returning table(s)\n// TODO: handle tfoot\n// TODO: handle tables with no th's\n// TODO: handle duplicate ID's\n\nclass ResponsibleTables {\n    constructor (options) {\n        ResponsibleTables.VERSION = '1.0.0';\n\n        // defaults\n        this.defaults = {\n            activeClass: 'responsibleTable--active',\n            columnHeadingClass: 'responsibleTable__column-heading',\n            containerSelector: '.container',\n            debounceRate: 200,\n            subHeadingClass: 'responsibleTable__sub-heading',\n            tableDataClass: 'responsibleTable__table-data',\n            tableSelector: '.responsibleTable',\n            debug: false\n        };\n        // merge options and defaults\n        this.extendDefaults(options, this.defaults);\n        // vars\n        this.originalTables = [].slice.call(document.querySelectorAll(this.defaults.tableSelector));\n        this.tableData = [];\n        this.testData = {\n            start: 0,\n            finish: 0,\n            result () {\n                return Math.round(this.finish - this.start) ? `${Math.round(this.finish - this.start)}` : '< 1';\n            }\n        };\n\n        this.registerEvents();\n        this.init();\n    }\n\n    /**\n     * initiate data, cache table, build / not build\n     * @param force {boolean}\n     */\n    init (force = false) {\n        this.originalTables.forEach((table, index) => {\n            // create tableData object per instance\n            this.initiateTableData(table, index);\n            // cache original state\n            if (!this.tableData[index].cache.original) {\n                this.cacheTable(table, index);\n            }\n            // to build or not to build...\n            if (this.tableData[index].currentWidth > this.tableData[index].container.width) {\n                this.tableData[index].minWidth = this.tableData[index].currentWidth;\n            }\n\n            if (this.tableData[index].minWidth > this.tableData[index].container.width) {\n                this.build(table, index);\n            }\n        });\n    }\n\n    /**\n     * refresh table state, update table & container width, build / not build\n     */\n    refresh () {\n        this.originalTables.forEach((table, index) => {\n            this.tableData[index].currentWidth = this.tableData[index].node.getBoundingClientRect().width;\n\n            if (this.tableData[index].container.node) {\n                this.tableData[index].container.width = this.tableData[index].container.node.getBoundingClientRect().width;\n            }\n\n            // to build or not to build...\n            if (this.tableData[index].currentWidth > this.tableData[index].container.width) {\n                this.tableData[index].minWidth = this.tableData[index].currentWidth;\n            }\n\n            if (this.tableData[index].minWidth > this.tableData[index].container.width) {\n                this.build(table, index);\n            }\n            else if (this.tableData[index].minWidth !== 0 && this.tableData[index].minWidth < this.tableData[index].container.width && this.tableData[index].isResponsible) {\n                this.restoreTable(index);\n            }\n        });\n    }\n\n    /**\n     * cache original & responsible version of table outerHTML\n     * @param table {Element}\n     * @param index {int}\n     */\n    cacheTable (table, index) {\n        if (!this.tableData[index].isResponsible) {\n            this.tableData[index].cache.original = table.outerHTML;\n        }\n        else {\n            this.tableData[index].cache.responsible = table.outerHTML;\n        }\n    }\n\n    /**\n     * create table data object\n     * @param table {Element}\n     * @param index {int}\n     */\n    initiateTableData (table, index) {\n        this.tableData[index] = {\n            currentWidth: 0,\n            isResponsible: false,\n            hasChanged: false,\n            minWidth: 0,\n            node: null,\n            cache: {\n                original: '',\n                responsible: ''\n            },\n            rows: {\n                nodes: null,\n                length: 0\n            },\n            columns: {\n                nodes: null,\n                length: 0\n            },\n            headings: {\n                nodes: null,\n                titles: []\n            },\n            container: {\n                node: null,\n                width: 0\n            },\n            fragment: null\n        };\n\n        // original table node\n        this.tableData[index].node = table;\n        // width\n        this.tableData[index].currentWidth = table.getBoundingClientRect().width;\n        // rows\n        this.tableData[index].rows.nodes = this.getRows(table);\n        this.tableData[index].rows.length = this.tableData[index].rows.nodes.length;\n        // columns\n        this.tableData[index].columns.nodes = this.getColumns(table);\n        this.tableData[index].columns.length = this.tableData[index].columns.nodes.length;\n        // headings\n        this.tableData[index].headings.titles = this.getTableHeadings(table, index);\n        // container\n        this.tableData[index].container.node = document.querySelector(this.defaults.containerSelector) || null;\n        if (this.tableData[index].container.node) {\n            this.tableData[index].container.width = this.tableData[index].container.node.getBoundingClientRect().width;\n        }\n        // fragment\n        this.tableData[index].fragment = document.createDocumentFragment();\n    }\n\n    /**\n     * build responsible table\n     * @param table {Element}\n     * @param tableIndex {int}\n     * @returns {boolean}\n     */\n    build (table, tableIndex) {\n        this.testData.start = performance.now();\n\n        if (!this.tableData[tableIndex].hasChanged) {\n                // create table fragment\n                this.tableData[tableIndex].fragment = document.createDocumentFragment();\n                // append first row to fragment\n                this.tableData[tableIndex].fragment.appendChild(this.buildFirstRow(table, tableIndex));\n                // loop through rows excluding the first and build out the data\n                this.tableData[tableIndex].rows.nodes.forEach((row, index) => {\n                    if (index) {\n                        this.tableData[tableIndex].fragment.appendChild(this.buildTableData(table, tableIndex, index));\n                    }\n                });\n                // clone original table node, excluding children\n                const newTable = table.cloneNode(false);\n                // append fragment to cloned node\n                newTable.appendChild(this.tableData[tableIndex].fragment);\n                // switch out innerHTML of old table for new\n                table.innerHTML = newTable.innerHTML;\n                // TODO: classList fallback\n                table.classList.add(this.defaults.activeClass);\n                // update config with new node\n                this.tableData[tableIndex].node = table;\n                // record state change\n                this.tableData[tableIndex].hasChanged = true;\n                this.tableData[tableIndex].isResponsible = true;\n\n                if (!this.tableData[tableIndex].cache.responsible) {\n                    this.cacheTable(table, tableIndex);\n                }\n        }\n        // restore responsible table from cache if we have cached it\n        else {\n            this.tableData[tableIndex].node.outerHTML = this.tableData[tableIndex].cache.responsible;\n            // TODO Do we need this node reference\n            this.tableData[tableIndex].node = document.querySelector(this.defaults.tableSelector);\n            this.tableData[tableIndex].isResponsible = true;\n        }\n\n        this.testData.finish = performance.now();\n    }\n\n    /**\n     * get table columns\n     * @param table {Element}\n     * @returns {array}\n     */\n    getColumns (table) {\n        // potentially better way of getting this, maybe get largest row instead of assuming the first\n        const firstRow = this.getRows(table)[0];\n        return [].slice.call(firstRow.children);\n    }\n\n    /**\n     * get table rows\n     * @param table {Element}\n     * @returns {array}\n     */\n     getRows (table) {\n        return [].slice.call(table.getElementsByTagName('tr'));\n    }\n\n    /**\n    * Get column headings\n    * @param    {Element} table\n    * @return   {Array} column headings\n    **/\n    getTableHeadings (table, index) {\n        let headings = [];\n\n        this.tableData[index].columns.nodes.forEach((column, index) => {\n            headings.push(table.getElementsByTagName('th')[index].innerHTML);\n        });\n\n        return headings;\n    }\n\n    /**\n     * build first row of responsible table\n     * @param table {Element}\n     * @param index {int}\n     * @returns {Element}\n     */\n    buildFirstRow (table, index) {\n        // this might not be a th, fix that\n        const firstCell = table.querySelector('th');\n        const firstRow = document.createElement('tr');\n        const thisCell = document.createElement('th');\n\n        thisCell.innerHTML = firstCell.innerHTML;\n        thisCell.setAttribute('colspan', 2);\n        firstRow.appendChild(thisCell);\n\n        return firstRow;\n    }\n\n    /**\n     * build table data\n     * @param table {Element}\n     * @param tableIndex {int}\n     * @param rowIndex {int}\n     * @returns {DocumentFragment}\n     */\n    buildTableData (table, tableIndex, rowIndex) {\n        const fragment = document.createDocumentFragment();\n        const firstRow = document.createElement('tr');\n        const cells = this.tableData[tableIndex].rows.nodes[rowIndex].querySelectorAll('td');\n        const firstCell = cells[0];\n        // append first cell as data heading\n        firstCell.setAttribute('colspan', 2);\n        // TODO: fallback for ie9\n        firstCell.classList.add(this.defaults.subHeadingClass);\n        firstRow.appendChild(firstCell);\n        fragment.appendChild(firstRow);\n        // loop through each column exluding first and populate data\n        this.tableData[tableIndex].columns.nodes.forEach((column, index) => {\n            if (index) {\n                const row = document.createElement('tr');\n                const heading = document.createElement('td');\n\n                heading.innerHTML = this.tableData[tableIndex].headings.titles[index];\n                // TODO: this might not be a 'th', fix that\n                // TODO: classlist fallback\n                heading.classList.add(this.defaults.columnHeadingClass);\n                row.appendChild(heading);\n                // TODO: classlist fallback\n                cells[index].classList.add(this.defaults.tableDataClass);\n                row.appendChild(cells[index]);\n                fragment.appendChild(row);\n            }\n        });\n\n        return fragment;\n    }\n\n    /**\n     * toggle table state and restore\n     * @param index {int || null}\n     */\n    restoreTable (index = null) {\n        this.testData.start = performance.now();\n        // if no index provided restore all tables\n        if (index === null) {\n            this.originalTables.forEach((table, index) => {\n                if (this.tableData[index].isResponsible) {\n                    table.outerHTML = this.tableData[index].cache.original;\n                    this.tableData[index].isResponsible = false;\n                    // TODO: Do we need this new node reference?\n                    this.tableData[index].node = [].slice.call(document.querySelectorAll(this.defaults.tableSelector))[index];\n                }\n                else {\n                    table.outerHTML = this.tableData[index].cache.responsible;\n                    this.tableData[index].isResponsible = true;\n                    // TODO: Do we need this new node reference?\n                    this.tableData[index].node = [].slice.call(document.querySelectorAll(this.defaults.tableSelector))[index];\n                }\n            });\n        }\n        // restore table index\n        // TODO: perhaps need a method to return a table index,\n        // how would a user know the table index?\n        else {\n            if (this.tableData[index].isResponsible) {\n                this.tableData[index].isResponsible = false;\n                this.tableData[index].node.outerHTML = this.tableData[index].cache.original;\n                // TODO Do we need this node reference\n                this.tableData[index].node = document.querySelector(this.defaults.tableSelector);\n            }\n            else {\n                this.tableData[index].isResponsible = true;\n                this.tableData[index].node.outerHTML = this.tableData[index].cache.responsible;\n                // TODO Do we need this node reference\n                this.tableData[index].node = document.querySelector(this.defaults.tableSelector);\n            }\n        }\n\n        this.testData.finish = performance.now();\n    }\n\n    /**\n    * merge options & default objects\n    * @param    {object} options\n    * @param    {object} defaults\n    **/\n    extendDefaults (options, defaults) {\n        if (typeof options === 'object') {\n            for (let prop in options) {\n                if (defaults.hasOwnProperty(prop)) {\n                    defaults[prop] = options[prop];\n                }\n            }\n        }\n    }\n\n    /**\n    * de-bounce and add window resize\n    **/\n    registerEvents () {\n        window.addEventListener('resize', this.debounce(() => {\n            this.refresh();\n        }, this.defaults.debounceRate));\n    }\n\n    /**\n    * event de-bounce taken from Underscore.js\n    **/\n    debounce (func, wait, immediate) {\n        let timeout;\n        return () => {\n            const context = this, args = arguments;\n            const later = function() {\n                timeout = null;\n                if (!immediate) func.apply(context, args);\n            };\n            const callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) func.apply(context, args);\n        };\n    }\n}\n\nmodule.exports = ResponsibleTables;\n"]}