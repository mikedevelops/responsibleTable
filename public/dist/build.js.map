{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/classlist-polyfill/src/index.js","node_modules/random-number/index.js","src/index.js","src/responsibleTable.js","src/tableGenerator.js"],"names":[],"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","file":"build.js","sourceRoot":"/source/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n * classList.js: Cross-browser full element.classList implementation.\n * 2014-07-23\n *\n * By Eli Grey, http://eligrey.com\n * Public Domain.\n * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n */\n\n/*global self, document, DOMException */\n\n/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js*/\n\n/* Copied from MDN:\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/classList\n */\n\nif (\"document\" in window.self) {\n\n  // Full polyfill for browsers with no classList support\n  // Including IE < Edge missing SVGElement.classList\n  if (!(\"classList\" in document.createElement(\"_\"))\n    || document.createElementNS && !(\"classList\" in document.createElementNS(\"http://www.w3.org/2000/svg\",\"g\"))) {\n\n  (function (view) {\n\n    \"use strict\";\n\n    if (!('Element' in view)) return;\n\n    var\n        classListProp = \"classList\"\n      , protoProp = \"prototype\"\n      , elemCtrProto = view.Element[protoProp]\n      , objCtr = Object\n      , strTrim = String[protoProp].trim || function () {\n        return this.replace(/^\\s+|\\s+$/g, \"\");\n      }\n      , arrIndexOf = Array[protoProp].indexOf || function (item) {\n        var\n            i = 0\n          , len = this.length\n        ;\n        for (; i < len; i++) {\n          if (i in this && this[i] === item) {\n            return i;\n          }\n        }\n        return -1;\n      }\n      // Vendors: please allow content code to instantiate DOMExceptions\n      , DOMEx = function (type, message) {\n        this.name = type;\n        this.code = DOMException[type];\n        this.message = message;\n      }\n      , checkTokenAndGetIndex = function (classList, token) {\n        if (token === \"\") {\n          throw new DOMEx(\n              \"SYNTAX_ERR\"\n            , \"An invalid or illegal string was specified\"\n          );\n        }\n        if (/\\s/.test(token)) {\n          throw new DOMEx(\n              \"INVALID_CHARACTER_ERR\"\n            , \"String contains an invalid character\"\n          );\n        }\n        return arrIndexOf.call(classList, token);\n      }\n      , ClassList = function (elem) {\n        var\n            trimmedClasses = strTrim.call(elem.getAttribute(\"class\") || \"\")\n          , classes = trimmedClasses ? trimmedClasses.split(/\\s+/) : []\n          , i = 0\n          , len = classes.length\n        ;\n        for (; i < len; i++) {\n          this.push(classes[i]);\n        }\n        this._updateClassName = function () {\n          elem.setAttribute(\"class\", this.toString());\n        };\n      }\n      , classListProto = ClassList[protoProp] = []\n      , classListGetter = function () {\n        return new ClassList(this);\n      }\n    ;\n    // Most DOMException implementations don't allow calling DOMException's toString()\n    // on non-DOMExceptions. Error's toString() is sufficient here.\n    DOMEx[protoProp] = Error[protoProp];\n    classListProto.item = function (i) {\n      return this[i] || null;\n    };\n    classListProto.contains = function (token) {\n      token += \"\";\n      return checkTokenAndGetIndex(this, token) !== -1;\n    };\n    classListProto.add = function () {\n      var\n          tokens = arguments\n        , i = 0\n        , l = tokens.length\n        , token\n        , updated = false\n      ;\n      do {\n        token = tokens[i] + \"\";\n        if (checkTokenAndGetIndex(this, token) === -1) {\n          this.push(token);\n          updated = true;\n        }\n      }\n      while (++i < l);\n\n      if (updated) {\n        this._updateClassName();\n      }\n    };\n    classListProto.remove = function () {\n      var\n          tokens = arguments\n        , i = 0\n        , l = tokens.length\n        , token\n        , updated = false\n        , index\n      ;\n      do {\n        token = tokens[i] + \"\";\n        index = checkTokenAndGetIndex(this, token);\n        while (index !== -1) {\n          this.splice(index, 1);\n          updated = true;\n          index = checkTokenAndGetIndex(this, token);\n        }\n      }\n      while (++i < l);\n\n      if (updated) {\n        this._updateClassName();\n      }\n    };\n    classListProto.toggle = function (token, force) {\n      token += \"\";\n\n      var\n          result = this.contains(token)\n        , method = result ?\n          force !== true && \"remove\"\n        :\n          force !== false && \"add\"\n      ;\n\n      if (method) {\n        this[method](token);\n      }\n\n      if (force === true || force === false) {\n        return force;\n      } else {\n        return !result;\n      }\n    };\n    classListProto.toString = function () {\n      return this.join(\" \");\n    };\n\n    if (objCtr.defineProperty) {\n      var classListPropDesc = {\n          get: classListGetter\n        , enumerable: true\n        , configurable: true\n      };\n      try {\n        objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n      } catch (ex) { // IE 8 doesn't support enumerable:true\n        if (ex.number === -0x7FF5EC54) {\n          classListPropDesc.enumerable = false;\n          objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n        }\n      }\n    } else if (objCtr[protoProp].__defineGetter__) {\n      elemCtrProto.__defineGetter__(classListProp, classListGetter);\n    }\n\n    }(window.self));\n\n    } else {\n    // There is full or partial native classList support, so just check if we need\n    // to normalize the add/remove and toggle APIs.\n\n    (function () {\n      \"use strict\";\n\n      var testElement = document.createElement(\"_\");\n\n      testElement.classList.add(\"c1\", \"c2\");\n\n      // Polyfill for IE 10/11 and Firefox <26, where classList.add and\n      // classList.remove exist but support only one argument at a time.\n      if (!testElement.classList.contains(\"c2\")) {\n        var createMethod = function(method) {\n          var original = DOMTokenList.prototype[method];\n\n          DOMTokenList.prototype[method] = function(token) {\n            var i, len = arguments.length;\n\n            for (i = 0; i < len; i++) {\n              token = arguments[i];\n              original.call(this, token);\n            }\n          };\n        };\n        createMethod('add');\n        createMethod('remove');\n      }\n\n      testElement.classList.toggle(\"c3\", false);\n\n      // Polyfill for IE 10 and Firefox <24, where classList.toggle does not\n      // support the second argument.\n      if (testElement.classList.contains(\"c3\")) {\n        var _toggle = DOMTokenList.prototype.toggle;\n\n        DOMTokenList.prototype.toggle = function(token, force) {\n          if (1 in arguments && !this.contains(token) === !force) {\n            return force;\n          } else {\n            return _toggle.call(this, token);\n          }\n        };\n\n      }\n\n      testElement = null;\n    }());\n  }\n}\n","void function(root){\n\n  function defaults(options){\n    var options = options || {}\n    var min = options.min\n    var max = options.max\n    var integer = options.integer || false\n    if ( min == null && max == null ) {\n      min = 0\n      max = 1\n    } else if ( min == null ) {\n      min = max - 1\n    } else if ( max == null ) {\n      max = min + 1\n    }\n    if ( max < min ) throw new Error('invalid options, max must be >= min')\n    return {\n      min:     min\n    , max:     max\n    , integer: integer\n    }\n  }\n\n  function random(options){\n    options = defaults(options)\n    if ( options.max === options.min ) return options.min\n    var r = Math.random() * (options.max - options.min + Number(!!options.integer)) + options.min\n    return options.integer ? Math.floor(r) : r\n  }\n\n  function generator(options){\n    options = defaults(options)\n    return function(min, max, integer){\n      options.min     = min != null ? min : options.min\n      options.max     = max != null ? max : options.max\n      options.integer = integer != null ? integer : options.integer\n      return random(options)\n    }\n  }\n\n  module.exports =  random\n  module.exports.generator = generator\n  module.exports.defaults = defaults\n}(this)\n","import ResponsibleTable from './responsibleTable';\nimport TableGenerator from './tableGenerator';\n\nconst tableGenerator = new TableGenerator();\nconst consoleElement = document.getElementById('console');\nconst generatedContainer = document.getElementById('generatedContainer');\nconst mainContent = document.getElementById('main');\n\nvar start;\nvar finish;\nvar currentTable;\n\nfunction consoleLog (log) {\n    const output = document.createElement('p');\n    const logs = consoleElement.querySelectorAll('.console__output');\n\n    if (logs.length > 5) {\n        logs[0].remove();\n    }\n\n    output.className = 'console__output';\n    output.innerHTML = log;\n    consoleElement.appendChild(output);\n}\n\nwindow.addEventListener('tableGenerator::complete', () => {\n    let responsibleToggle = document.getElementById('responsibleToggle');\n    let thisTableLabel = `Responsible table [${tableGenerator.columns} x ${tableGenerator.rows}, ${tableGenerator.rows * tableGenerator.columns} cells]`;\n\n    responsibleToggle.classList.remove('hidden');\n\n    responsibleToggle.addEventListener('click', function () {\n        console.log('refresh!');\n\n        thisTableLabel = `Responsible table [${tableGenerator.columns} x ${tableGenerator.rows}, ${tableGenerator.rows * tableGenerator.columns} cells]`;\n\n        // if (!currentTable.tableData[0].isResponsible) {\n        //     currentTable.build(currentTable.originalTables[0], 0);\n        //     consoleLog(`${thisTableLabel} took <strong>${currentTable.testData.result()} ms</strong> to build`);\n        // }\n        // else {\n            currentTable.restoreTable(0);\n            consoleLog(`${thisTableLabel} took <strong>${currentTable.testData.result()} ms</strong> to restore`);\n        // }\n    });\n\n    start = performance.now();\n\n    currentTable = new ResponsibleTable({\n        tableSelector: `.${tableGenerator.tableId}`\n    });\n\n    finish = performance.now();\n\n    consoleLog(`${thisTableLabel} took <strong>${Math.round(finish - start)} ms</strong> to initiate`);\n});\n\nwindow.addEventListener('tableGenerator::refresh', () => {\n    currentTable.refresh();\n});\n\n\n\nconst containerWidthControl = document.getElementById('containerWidth');\nconst containerWidthOutput = document.getElementById('containerWidthOutput');\n\ncontainerWidthOutput.innerHTML = `${containerWidthControl.value}%`;\n\ncontainerWidthControl.addEventListener('input', (event) => {\n    containerWidthOutput.innerHTML = `${event.target.value}%`;\n});\n","// TODO public method for returning table(s)\n// TODO: handle tfoot\n// TODO: handle tables with no th's\n// TODO: handle duplicate ID's\n\nexport default class ResponsibleTable {\n    constructor (options) {\n        // defaults\n        this.defaults = {\n            activeClass: 'responsibleTable--active',\n            columnHeadingClass: 'responsibleTable__column-heading',\n            containerSelector: '.container',\n            debounceRate: 200,\n            subHeadingClass: 'responsibleTable__sub-heading',\n            tableDataClass: 'responsibleTable__table-data',\n            tableSelector: '.responsibleTable',\n            debug: false\n        };\n        // merge options and defaults\n        this.extendDefaults(options, this.defaults);\n        // vars\n        this.originalTables = [].slice.call(document.querySelectorAll(this.defaults.tableSelector));\n        this.tableData = [];\n        this.testData = {\n            start: 0,\n            finish: 0,\n            result () {\n                return Math.round(this.finish - this.start) ? `${Math.round(this.finish - this.start)}` : '< 1';\n            }\n        };\n        this.registerEvents();\n        this.init();\n    }\n\n    /**\n     * initiate data, cache table, build / not build\n     * @param force {boolean}\n     */\n    init (force = false) {\n        this.originalTables.forEach((table, index) => {\n            // create tableData object per instance\n            this.initiateTableData(table, index);\n\n            console.log(this.tableData);\n            // cache original state\n            if (!this.tableData[index].cache.original) {\n                this.cacheTable(table, index);\n            }\n            // to build or not to build...\n            // this.build(table, index, force);\n        });\n    }\n\n    /**\n     * refresh table state, update table & container width, build / not build\n     */\n    refresh () {\n        this.originalTables.forEach((table, index) => {\n            this.tableData[index].currentWidth = this.tableData[index].node.getBoundingClientRect().width;\n\n            if (this.tableData[index].container.node) {\n                this.tableData[index].container.width = this.tableData[index].container.node.getBoundingClientRect().width;\n            }\n\n            // to build or not to build...\n            this.build(table, index);\n        });\n    }\n\n    /**\n     * cache original & responsible version of table outerHTML\n     * @param table {Element}\n     * @param index {int}\n     */\n    cacheTable (table, index) {\n        if (!this.tableData[index].isResponsible) {\n            this.tableData[index].cache.original = table.outerHTML;\n        }\n        else {\n            this.tableData[index].cache.responsible = table.outerHTML;\n        }\n    }\n\n    /**\n     * create table data object\n     * @param table {Element}\n     * @param index {int}\n     */\n    initiateTableData (table, index) {\n        this.tableData[index] = {\n            currentWidth: 0,\n            isResponsible: false,\n            hasChanged: false,\n            minWidth: 0,\n            node: null,\n            cache: {\n                original: '',\n                responsible: ''\n            },\n            rows: {\n                nodes: null,\n                length: 0\n            },\n            columns: {\n                nodes: null,\n                length: 0\n            },\n            headings: {\n                nodes: null,\n                titles: []\n            },\n            container: {\n                node: null,\n                width: 0\n            },\n            fragment: null\n        };\n\n        // original table node\n        this.tableData[index].node = table;\n        // width\n        this.tableData[index].currentWidth = table.getBoundingClientRect().width;\n        // rows\n        this.tableData[index].rows.nodes = this.getRows(table);\n        this.tableData[index].rows.length = this.tableData[index].rows.nodes.length;\n        // columns\n        this.tableData[index].columns.nodes = this.getColumns(table);\n        this.tableData[index].columns.length = this.tableData[index].columns.nodes.length;\n        // headings\n        this.tableData[index].headings.titles = this.getTableHeadings(table, index);\n        // container\n        this.tableData[index].container.node = document.querySelector(this.defaults.containerSelector) || null;\n        if (this.tableData[index].container.node) {\n            this.tableData[index].container.width = this.tableData[index].container.node.getBoundingClientRect().width;\n        }\n        // fragment\n        this.tableData[index].fragment = document.createDocumentFragment();\n    }\n\n    /**\n     * build responsible table\n     * @param table {Element}\n     * @param tableIndex {int}\n     * @returns {boolean}\n     */\n    build (table, tableIndex) {\n        console.log('building...');\n\n        this.testData.start = performance.now();\n\n        if (!this.tableData[tableIndex].hasChanged) {\n            this.tableData[tableIndex].minWidth = this.tableData[tableIndex].currentWidth;\n            // create table fragment\n            this.tableData[tableIndex].fragment = document.createDocumentFragment();\n            // append first row to fragment\n            this.tableData[tableIndex].fragment.appendChild(this.buildFirstRow(table, tableIndex));\n            // loop through rows excluding the first and build out the data\n            this.tableData[tableIndex].rows.nodes.forEach((row, index) => {\n                if (index) {\n                    this.tableData[tableIndex].fragment.appendChild(this.buildTableData(table, tableIndex, index));\n                }\n            });\n            // clone original table node, excluding children\n            const newTable = table.cloneNode(false);\n            // append fragment to cloned node\n            newTable.appendChild(this.tableData[tableIndex].fragment);\n            // switch out innerHTML of old table for new\n            table.innerHTML = newTable.innerHTML;\n            // TODO: classList fallback\n            table.classList.add(this.defaults.activeClass);\n            // update config with new node\n            this.tableData[tableIndex].node = table;\n            // record state change\n            this.tableData[tableIndex].hasChanged = true;\n            this.tableData[tableIndex].isResponsible = true;\n\n            if (!this.tableData[tableIndex].cache.responsible) {\n                this.cacheTable(table, tableIndex);\n            }\n        }\n        // restore responsible table from cache if we have cached it\n        else {\n            this.tableData[tableIndex].node.outerHTML = this.tableData[tableIndex].cache.responsible;\n            // TODO Do we need this node reference\n            this.tableData[tableIndex].node = document.querySelector(this.defaults.tableSelector);\n            this.tableData[tableIndex].isResponsible = true;\n        }\n\n        this.testData.finish = performance.now();\n    }\n\n    /**\n     * get table columns\n     * @param table {Element}\n     * @returns {array}\n     */\n    getColumns (table) {\n        // potentially better way of getting this, maybe get largest row instead of assuming the first\n        const firstRow = this.getRows(table)[0];\n        return [].slice.call(firstRow.children);\n    }\n\n    /**\n     * get table rows\n     * @param table {Element}\n     * @returns {array}\n     */\n     getRows (table) {\n        return [].slice.call(table.getElementsByTagName('tr'));\n    }\n\n    /**\n    * Get column headings\n    * @param    {Element} table\n    * @return   {Array} column headings\n    **/\n    getTableHeadings (table, index) {\n        let headings = [];\n\n        this.tableData[index].columns.nodes.forEach((column, index) => {\n            headings.push(table.getElementsByTagName('th')[index].innerHTML);\n        });\n\n        return headings;\n    }\n\n    /**\n     * build first row of responsible table\n     * @param table {Element}\n     * @param index {int}\n     * @returns {Element}\n     */\n    buildFirstRow (table, index) {\n        // this might not be a th, fix that\n        const firstCell = table.querySelector('th');\n        const firstRow = document.createElement('tr');\n        const thisCell = document.createElement('th');\n\n        thisCell.innerHTML = firstCell.innerHTML;\n        thisCell.setAttribute('colspan', 2);\n        firstRow.appendChild(thisCell);\n\n        return firstRow;\n    }\n\n    /**\n     * build table data\n     * @param table {Element}\n     * @param tableIndex {int}\n     * @param rowIndex {int}\n     * @returns {DocumentFragment}\n     */\n    buildTableData (table, tableIndex, rowIndex) {\n        const fragment = document.createDocumentFragment();\n        const firstRow = document.createElement('tr');\n        const cells = this.tableData[tableIndex].rows.nodes[rowIndex].querySelectorAll('td');\n        const firstCell = cells[0];\n        // append first cell as data heading\n        firstCell.setAttribute('colspan', 2);\n        // TODO: fallback for ie9\n        firstCell.classList.add(this.defaults.subHeadingClass);\n        firstRow.appendChild(firstCell);\n        fragment.appendChild(firstRow);\n        // loop through each column exluding first and populate data\n        this.tableData[tableIndex].columns.nodes.forEach((column, index) => {\n            if (index) {\n                const row = document.createElement('tr');\n                const heading = document.createElement('td');\n\n                heading.innerHTML = this.tableData[tableIndex].headings.titles[index];\n                // TODO: this might not be a 'th', fix that\n                // TODO: classlist fallback\n                heading.classList.add(this.defaults.columnHeadingClass);\n                row.appendChild(heading);\n                // TODO: classlist fallback\n                cells[index].classList.add(this.defaults.tableDataClass);\n                row.appendChild(cells[index]);\n                fragment.appendChild(row);\n            }\n        });\n\n        return fragment;\n    }\n\n    /**\n     * toggle table state and restore\n     * @param index {int || null}\n     */\n    restoreTable (index = null) {\n        this.testData.start = performance.now();\n\n        console.log('restoring...');\n        // if no index provided restore all tables\n        if (index === null) {\n            this.originalTables.forEach((table, index) => {\n                if (this.tableData[index].isResponsible) {\n                    table.outerHTML = this.tableData[index].cache.original;\n                    this.tableData[index].isResponsible = false;\n                    // TODO: Do we need this new node reference?\n                    this.tableData[index].node = [].slice.call(document.querySelectorAll(this.defaults.tableSelector))[index];\n                }\n                else {\n                    table.outerHTML = this.tableData[index].cache.responsible;\n                    this.tableData[index].isResponsible = true;\n                    // TODO: Do we need this new node reference?\n                    this.tableData[index].node = [].slice.call(document.querySelectorAll(this.defaults.tableSelector))[index];\n                }\n            });\n        }\n        // restore table index\n        // TODO: perhaps need a method to return a table index,\n        // how would a user know the table index?\n        else {\n            if (this.tableData[index].isResponsible) {\n                this.tableData[index].isResponsible = false;\n                this.tableData[index].node.outerHTML = this.tableData[index].cache.original;\n                // TODO Do we need this node reference\n                this.tableData[index].node = document.querySelector(this.defaults.tableSelector);\n            }\n            else {\n                this.tableData[index].isResponsible = true;\n                this.tableData[index].node.outerHTML = this.tableData[index].cache.responsible;\n                // TODO Do we need this node reference\n                this.tableData[index].node = document.querySelector(this.defaults.tableSelector);\n            }\n        }\n\n        this.testData.finish = performance.now();\n    }\n\n    /**\n    * merge options & default objects\n    * @param    {object} options\n    * @param    {object} defaults\n    **/\n    extendDefaults (options, defaults) {\n        if (typeof options === 'object') {\n            for (let prop in options) {\n                if (defaults.hasOwnProperty(prop)) {\n                    defaults[prop] = options[prop];\n                }\n            }\n        }\n    }\n\n    /**\n    * de-bounce and add window resize\n    **/\n    registerEvents () {\n        window.addEventListener('resize', this.debounce(() => {\n            this.refresh();\n        }, this.defaults.debounceRate));\n    }\n\n    /**\n    * event de-bounce taken from Underscore.js\n    **/\n    debounce (func, wait, immediate) {\n        let timeout;\n        return () => {\n            const context = this, args = arguments;\n            const later = function() {\n                timeout = null;\n                if (!immediate) func.apply(context, args);\n            };\n            const callNow = immediate && !timeout;\n            clearTimeout(timeout);\n            timeout = setTimeout(later, wait);\n            if (callNow) func.apply(context, args);\n        };\n    }\n}\n","require('classlist-polyfill');\n\nconst random = require('random-number');\n\nexport default class TableGenerator {\n    constructor () {\n        this.form = document.getElementById('tableGenerator');\n        this.tableContainer = 'generatedContainer';\n        this.UIContainer = 'generatedUIContainer';\n        this.generateData = ['foo', 'bar', 'jurassic', 'park'];\n        this.tableId = 'generatedTable';\n        this.rows = 0;\n        this.columns = 0;\n        this.containerWidth = 0;\n\n        this.registerEvents();\n    }\n\n     buildTable (options) {\n        if (document.getElementById(this.tableId)) {\n            document.getElementById(this.tableId).remove();\n            document.getElementById('container').remove();\n        }\n\n         console.log(options.mode);\n\n        const generatedContainer = document.createElement('div');\n        const generatedTable = document.createElement('table');\n\n        generatedTable.id = this.tableId;\n        // just because it's easier for now\n        generatedTable.className = `${this.tableId} responsibleTable`;\n        generatedContainer.id = 'container';\n        generatedContainer.className = 'container';\n        generatedContainer.style.width = `${this.containerWidth}%`;\n\n        switch (options.mode) {\n            case 'auto':\n                for (let i = this.rows; i--;) {\n                    let row = document.createElement('tr');\n                    let first = i === this.rows -1;\n\n                    for (let i = this.columns; i--;) {\n                        let data = (first) ? document.createElement('th') : document.createElement('td');\n                        data.innerHTML = this.generateData[random({min: 0, max: this.generateData.length - 1, integer: true})];\n                        row.appendChild(data);\n                    }\n\n                    generatedTable.appendChild(row);\n                }\n                break;\n            case 'html':\n                console.log('html');\n                console.log(generatedTable);\n                generatedTable.innerHTML = document.getElementById('htmlEntry').value;\n                break;\n        }\n\n\n        generatedContainer.appendChild(generatedTable);\n\n        return generatedContainer;\n    }\n\n    handleFormSubmit () {\n        this.form.addEventListener('submit', function (submit) {\n            submit.preventDefault();\n\n            const formMode = submit.target['formMode'].value;\n            let isValid = 0;\n\n            switch (formMode) {\n                case 'html':\n                    const htmlEntry = submit.target['htmlEntry'];\n                    if (htmlEntry.value !== \"\") {\n                        htmlEntry.classList.remove('error');\n\n                        // this.buildTable({mode: 'html'});\n                    }\n                    else {\n                        htmlEntry.classList.add('error');\n                        console.error('html entry was empty')\n                    }\n                    break;\n                case 'auto':\n                    const elements = [];\n\n                    function validateRowsColumns (inputArray) {\n                        inputArray.map(input => {\n                           if (input.value != 0) {\n                               input.classList.remove('error');\n                               isValid++;\n                           }\n                           else {\n                               input.classList.add('error');\n                           }\n                        });\n                    }\n\n                    [].slice.call(submit.target['tableCount']).map(count => {\n                        elements.push(count);\n                    });\n\n                    validateRowsColumns(elements);\n\n                    if (isValid === elements.length) {\n                        // this.buildTable({mode: 'auto'});\n                    }\n\n                    break;\n                case 'example':\n                    console.log('example!');\n                    break;\n            }\n\n                // this.containerWidth = document.getElementById('containerWidth').value;\n                //\n            document.getElementById(this.tableContainer).appendChild(this.buildTable({mode: 'html'}));\n                // else {\n                //     this.rows = document.getElementById('rowCount').value;\n                //     this.columns = document.getElementById('columnCount').value;\n                //     document.getElementById(this.tableContainer).appendChild(this.buildTable('auto'));\n                // }\n                //\n            const event = new Event('tableGenerator::complete');\n            window.dispatchEvent(event);\n        }.bind(this));\n    }\n\n    toggleForm (mode) {\n        switch (mode) {\n            case 'html':\n                this.autoForm.classList.add('form-mode--active');\n                this.htmlForm.classList.remove('form-mode--active');\n\n                this.autoFormInputs.map(input => {\n                    input.removeAttribute('disabled');\n                });\n                this.htmlFormInputs.map(input => {\n                    input.setAttribute('disabled', 'disabled');\n                });\n                break;\n            case 'auto':\n                this.htmlForm.classList.add('form-mode--active');\n                this.autoForm.classList.remove('form-mode--active');\n\n                this.htmlFormInputs.map(input => {\n                    input.removeAttribute('disabled');\n                });\n                this.autoFormInputs.map(input => {\n                    input.setAttribute('disabled', 'disabled');\n                });\n                break;\n        }\n    }\n\n    toggleMode () {\n        const modeRadioGroup = document.getElementById('formModeGroup');\n        const inputQuery = 'input[type=\"text\"], input[type=\"radio\"], input[type=\"range\"], input[type=\"number\"], textarea';\n\n        this.autoForm = document.querySelector('.form-mode--html');\n        this.autoFormInputs = [].slice.call(this.autoForm.querySelectorAll(inputQuery));\n        this.htmlForm = document.querySelector('.form-mode--auto');\n        this.htmlFormInputs = [].slice.call(this.htmlForm.querySelectorAll(inputQuery));\n\n        modeRadioGroup.addEventListener('click', function (click) {\n            if (click.target.value) {\n                this.toggleForm(click.target.value);\n            }\n        }.bind(this));\n    }\n\n    registerEvents () {\n        this.handleFormSubmit();\n        this.toggleMode();\n    }\n}\n"]}